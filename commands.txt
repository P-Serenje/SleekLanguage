### ▼ Build & Execution Commands (with Explanations)

#### 1. Compile ANTLR-generated Lexer/Parser

Compiles `.java` files in `src/antlr/` using `antlr.jar`:

```bash
javac -cp ".:lib/antlr.jar" src/antlr/*.java
```

#### 2. (Optional) Visualize Parse Tree

Launches ANTLR TestRig GUI to inspect parse tree for `test.txt` (root rule: `program`):

```bash
java -cp ".:lib/antlr.jar:src" org.antlr.v4.gui.TestRig antlr.Sleek program -gui test.txt
```

#### 3. Compile Compiler Source

Compiles ANTLR parser and main compiler class to the `out/` directory:

```bash
javac -cp lib/antlr.jar -d out src/antlr/*.java src/compiler/SleekLLVMCompiler.java
```

#### 4. Link and Optimize Executable

Links LLVM IR (`test.ll`) with runtime support and optimizes output:

```bash
clang test.ll runtime.c -O2 -o myprog
```

---

### ▼ Typical Workflow

1. Edit `.sleek` source file
2. If grammar changed, recompile (Steps 1 & 3)
3. Generate LLVM IR:

   ```bash
   java -cp "out:lib/antlr.jar" compiler.SleekLLVMCompiler program.sleek
   ```
4. Link executable (Step 4)
5. Run:

   ```bash
   ./myprog
   ```
